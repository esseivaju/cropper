#!/usr/bin/env python

import argparse
import os
import sys
import logging
import pathlib
from concurrent.futures import ThreadPoolExecutor

from cropper.process_image import process


def configure_logging():
    handlers = []
    handlers.append(logging.StreamHandler(sys.stdout))
    handlers.append(logging.FileHandler('cropper.log', 'w'))
    logging.basicConfig(handlers=handlers, level=logging.DEBUG,
                        style='{', format="{asctime} | {levelname} | {name} | {module} | {message}")


if __name__ == "__main__":
    configure_logging()
    parser = argparse.ArgumentParser()
    parser.add_argument("--src", required=True)
    parser.add_argument("--dst", required=True)
    parser.add_argument("--workers", default=os.cpu_count() * 5, help="Number of workers to use. Default to the number of cpu cores")
    args = parser.parse_args()

    cdir = os.getcwd()
    args.src = os.path.join(cdir, args.src)
    args.dst = os.path.join(cdir, args.dst)

    pathlib.Path(args.dst).mkdir(parents=True, exist_ok=True)

    with ThreadPoolExecutor(max_workers=args.workers) as executor:
        for dirpath, dirnames, filenames in os.walk(args.src):
            for filename in filenames:
                if filename.endswith(".tif"):
                    executor.submit(process, os.path.join(dirpath, filename), args.dst)
